{
	"id": s15Njg81Ldj64LvzkH8A,
	"date_time": "01.11.2021 21:29:25",
	"group": "36/1",
	"number_lesson": 1,
	"lesson": "компьютерные сети",
	"teacher": "Приходько Татьяна Александровна"
}
\\\\\\\\\\\\\\\\\\
здесь 165 символов
\\\\\\\\\\\\\\\\\\




ИЛИ ЖЕ ДЛЯ ПРОСТОТЫ КОДИРОВАНИЯ:
Можно просто данные разделять разделителем "|" например, и потом при получении их
уже составлять в типа-json

s15Njg81Ldj64LvzkH8A|"01.11.2021 21:29:25"|"36/1"|1|"Компьютерные сети"|"Приходько Татьяна Александровна"
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
здесь 91 символ в строке этой
60 - 1-байт -> 60 байт
45 - 2-байт -> 90 байт
ИТОГО - 150 байт должно быть в итоге
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

20 симв на идентификатор (англ буквы + цифры) ---------------- 20 * 8 бит = 160 бит
21 символ на дату время с кавычками и пробелом --------------- 21 * 8 бит = 168 бит
10 символов на группу (цифры + русс буквы + спец симв) ------- 10 * 16 бит = 160 бит
1 символ на номер пары (1-9) --------------------------------- 8 бит
30 символов на название пары (русс буквы + спец симв) -------- 30 * 16 бит = 480 бит
50 символов на ФИО препода + кавычки ------------------------- 50 * 16 бит = 800 бит
5 символов разделителей "|" ---------------------------------- 5 * 8 бит = 40 бит
итого: 137 символов максимум в коде
UTF-8: 137 * 16 бит = 2192 бит (если все симв по 2 байта) => 17 версия, H уровень коррекции (16 блоков байт); 12 версия, M уровень коррекции (8 блоков байт)
UTF-8 точно: 1816 бит (227 байт) => 16 версия, H уровень коррекции (16 блоков байт); 11 версия, M уровень коррекции (5 блоков байт)


мы же заранее знаем, какая инфа будет в коде, и которую нам надо считать

сначала переводим входную строку в UTF-8 двоичный формат 
(лучше дополнять каждый символ сразу до 8 бит наверное, с помощью незначащих нулей)
